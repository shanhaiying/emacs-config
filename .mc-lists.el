;; This file is automatically generated by the multiple-cursors extension.
;; It keeps track of your preferences for running commands with multiple cursors.

(setq mc/cmds-to-run-for-all
  '(
     ace-jump-done
     ace-jump-mode
     auto-jump-char
     back-to-indentation-or-beginning
     beginning-of-visual-line
     c-electric-semi&comma
     c-indent-line-or-region
     cua-cancel
     cua-copy-region
     cua-delete-region
     cua-exchange-point-and-mark
     cua-paste
     cua-paste-pop
     delete-horizontal-space
     easy-kill
     electric-newline-and-maybe-indent
     end-of-visual-line
     ess-smart-S-assign
     eval-and-replace
     eval-last-sexp
     evil-append-line
     evil-backward-WORD-begin
     evil-backward-char
     evil-backward-sentence
     evil-backward-sexp
     evil-backward-word-begin
     evil-change
     evil-change-to-previous-state
     evil-delete
     evil-delete-backward-char-and-join
     evil-delete-backward-word
     evil-delete-char
     evil-delete-line
     evil-digit-argument-or-evil-beginning-of-line
     evil-emacs-state
     evil-end-of-line
     evil-end-of-visual-line
     evil-execute-in-normal-state
     evil-exit-visual-state
     evil-fastnav-forward-to
     evil-find-char-to
     evil-first-non-blank
     evil-force-normal-state
     evil-forward-WORD-begin
     evil-forward-WORD-end
     evil-forward-char
     evil-forward-sexp
     evil-forward-word-begin
     evil-forward-word-end
     evil-goto-line
     evil-insert
     evil-join
     evil-jump-forward
     evil-jump-item
     evil-mouse-drag-region
     evil-next-line
     evil-next-line-first-non-blank
     evil-next-visual-line
     evil-normal-state
     evil-paste-after
     evil-previous-line
     evil-previous-visual-line
     evil-ret
     evil-ret-and-indent
     evil-search-forward
     evil-search-next
     evil-visual-char
     evil-visual-line
     evil-yank
     evilnc-comment-or-uncomment-lines
     expand-and-replace
     fastnav-mark-to-char-forward
     fastnav-sprint-forward
     haskell-indentation-delete-backward-char
     icicle-execute-extended-command
     indent-for-tab-command
     indent-new-comment-line
     iy-go-to-char--command
     jedi:dot-complete
     jump-char-process-char
     keyboard-quit
     kill-ring-search
     kill-sexp
     kring-down
     kring-left
     kring-right
     kring-up
     mouse-set-region
     my-evil-smart-undo
     my-helm-omni
     my-normal-smart-undo
     my-wlr-cua-cut-region
     previous-buffer
     python-backspace
     python-electric-colon
     python-indent-dedent-line-backspace
     replace-last-sexp
     smart-newline
     sp--cua-replace-region
     sp--self-insert-command
     sp-absorb-sexp
     sp-backward-sexp
     sp-backward-unwrap-sexp
     sp-emit-sexp
     sp-forward-barf-sexp
     sp-forward-sexp
     sp-forward-slurp-sexp
     sp-kill-sexp
     sp-remove-active-pair-overlay
     sp-unwrap-sexp
     transpose-sexps
     whole-line-or-region-yank
     yas-expand
     ))

(setq mc/cmds-to-run-once
  '(
     auto-semantic-jump-to-definition
     auto-smex
     describe-key
     evil-exit-emacs-state
     handle-select-window
     handle-switch-frame
     helm-eval-expression
     icicle-goto-marker-or-set-mark-command
     ido-write-file
     iflipb-next-buffer
     mark-whole-buffer
     my-helm-buffers
     my-helm-find-files
     projectile-switch-project
     python-shell-send-buffer
     save-buffers-kill-terminal
     scroll-bar-mode
     scroll-bar-toolkit-scroll
     smex
     suspend-frame
     toggle-input-method
     undo-tree-visualize
     ))
